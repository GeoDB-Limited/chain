syntax = "proto3";
package coinswap;

option go_package = "github.com/GeoDB-Limited/odin-core/x/coinswap/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

// Query defines the gRPC querier service.
service Query {
  // Counts queries the number of data sources, oracle scripts, and requests.
  rpc Rate(QueryRateRequest) returns (QueryRateResponse) {
    option (google.api.http).get = "/coinswap/rate";
  }
}

// QueryCountsRequest is request type for the Query/Count RPC method.
message QueryRateRequest {}

// QueryCountsResponse is response type for the Query/Count RPC method.
message QueryRateResponse {
  string rate = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string initial_rate = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}